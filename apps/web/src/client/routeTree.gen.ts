/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as AppRouteImport } from './routes/_app'
import { Route as AppIndexRouteImport } from './routes/_app/index'
import { Route as AuthLayoutRouteImport } from './routes/auth/_layout'
import { Route as AuthLayoutSignUpRouteImport } from './routes/auth/_layout.sign-up'
import { Route as AuthLayoutSignInRouteImport } from './routes/auth/_layout.sign-in'
import { Route as AppPocketPocketIdRouteImport } from './routes/_app/pocket/$pocketId'

const AuthRouteImport = createFileRoute('/auth')()

const AuthRoute = AuthRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRouteImport,
} as any)
const AppRoute = AppRouteImport.update({
  id: '/_app',
  getParentRoute: () => rootRouteImport,
} as any)
const AppIndexRoute = AppIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppRoute,
} as any)
const AuthLayoutRoute = AuthLayoutRouteImport.update({
  id: '/_layout',
  getParentRoute: () => AuthRoute,
} as any)
const AuthLayoutSignUpRoute = AuthLayoutSignUpRouteImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => AuthLayoutRoute,
} as any)
const AuthLayoutSignInRoute = AuthLayoutSignInRouteImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => AuthLayoutRoute,
} as any)
const AppPocketPocketIdRoute = AppPocketPocketIdRouteImport.update({
  id: '/pocket/$pocketId',
  path: '/pocket/$pocketId',
  getParentRoute: () => AppRoute,
} as any)

export interface FileRoutesByFullPath {
  '': typeof AppRouteWithChildren
  '/auth': typeof AuthLayoutRouteWithChildren
  '/': typeof AppIndexRoute
  '/pocket/$pocketId': typeof AppPocketPocketIdRoute
  '/auth/sign-in': typeof AuthLayoutSignInRoute
  '/auth/sign-up': typeof AuthLayoutSignUpRoute
}
export interface FileRoutesByTo {
  '/auth': typeof AuthLayoutRouteWithChildren
  '/': typeof AppIndexRoute
  '/pocket/$pocketId': typeof AppPocketPocketIdRoute
  '/auth/sign-in': typeof AuthLayoutSignInRoute
  '/auth/sign-up': typeof AuthLayoutSignUpRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_app': typeof AppRouteWithChildren
  '/auth': typeof AuthRouteWithChildren
  '/auth/_layout': typeof AuthLayoutRouteWithChildren
  '/_app/': typeof AppIndexRoute
  '/_app/pocket/$pocketId': typeof AppPocketPocketIdRoute
  '/auth/_layout/sign-in': typeof AuthLayoutSignInRoute
  '/auth/_layout/sign-up': typeof AuthLayoutSignUpRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/auth'
    | '/'
    | '/pocket/$pocketId'
    | '/auth/sign-in'
    | '/auth/sign-up'
  fileRoutesByTo: FileRoutesByTo
  to: '/auth' | '/' | '/pocket/$pocketId' | '/auth/sign-in' | '/auth/sign-up'
  id:
    | '__root__'
    | '/_app'
    | '/auth'
    | '/auth/_layout'
    | '/_app/'
    | '/_app/pocket/$pocketId'
    | '/auth/_layout/sign-in'
    | '/auth/_layout/sign-up'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AppRoute: typeof AppRouteWithChildren
  AuthRoute: typeof AuthRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app/': {
      id: '/_app/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AppIndexRouteImport
      parentRoute: typeof AppRoute
    }
    '/auth/_layout': {
      id: '/auth/_layout'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthLayoutRouteImport
      parentRoute: typeof AuthRoute
    }
    '/auth/_layout/sign-up': {
      id: '/auth/_layout/sign-up'
      path: '/sign-up'
      fullPath: '/auth/sign-up'
      preLoaderRoute: typeof AuthLayoutSignUpRouteImport
      parentRoute: typeof AuthLayoutRoute
    }
    '/auth/_layout/sign-in': {
      id: '/auth/_layout/sign-in'
      path: '/sign-in'
      fullPath: '/auth/sign-in'
      preLoaderRoute: typeof AuthLayoutSignInRouteImport
      parentRoute: typeof AuthLayoutRoute
    }
    '/_app/pocket/$pocketId': {
      id: '/_app/pocket/$pocketId'
      path: '/pocket/$pocketId'
      fullPath: '/pocket/$pocketId'
      preLoaderRoute: typeof AppPocketPocketIdRouteImport
      parentRoute: typeof AppRoute
    }
  }
}

interface AppRouteChildren {
  AppIndexRoute: typeof AppIndexRoute
  AppPocketPocketIdRoute: typeof AppPocketPocketIdRoute
}

const AppRouteChildren: AppRouteChildren = {
  AppIndexRoute: AppIndexRoute,
  AppPocketPocketIdRoute: AppPocketPocketIdRoute,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

interface AuthLayoutRouteChildren {
  AuthLayoutSignInRoute: typeof AuthLayoutSignInRoute
  AuthLayoutSignUpRoute: typeof AuthLayoutSignUpRoute
}

const AuthLayoutRouteChildren: AuthLayoutRouteChildren = {
  AuthLayoutSignInRoute: AuthLayoutSignInRoute,
  AuthLayoutSignUpRoute: AuthLayoutSignUpRoute,
}

const AuthLayoutRouteWithChildren = AuthLayoutRoute._addFileChildren(
  AuthLayoutRouteChildren,
)

interface AuthRouteChildren {
  AuthLayoutRoute: typeof AuthLayoutRouteWithChildren
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthLayoutRoute: AuthLayoutRouteWithChildren,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  AppRoute: AppRouteWithChildren,
  AuthRoute: AuthRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
